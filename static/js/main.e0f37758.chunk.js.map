{"version":3,"sources":["components/ListGoods.jsx","App.js","index.js"],"names":["ListGoods","state","renderForm","isReversed","sortBy","goods","props","reverse","setState","sortByName","sortByLength","reset","this","sortedGoods","sort","g1","g2","localeCompare","length","className","map","good","type","onClick","React","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,YAAY,EACZC,OAAQ,GACRC,MAAO,EAAKC,MAAMD,OALtB,EAQEE,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAVzB,EAcEM,WAAa,WACX,EAAKD,SAAU,CAAEJ,OAAQ,UAf7B,EAkBEM,aAAe,WACb,EAAKF,SAAU,CAAEJ,OAAQ,YAnB7B,EAsBEO,MAAQ,WACN,EAAKH,SAAS,CACZL,YAAY,EAAOC,OAAQ,MAxBjC,4CA4BE,WAAU,IAAD,OACP,EAAkDQ,KAAKX,MAA/CI,EAAR,EAAQA,MAAOF,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,OAAQF,EAAnC,EAAmCA,WAC7BW,EAAW,YAAOR,GAkBxB,OAhBAQ,EAAYC,MAAK,SAACC,EAAIC,GACpB,OAAQZ,GACN,IAAK,OACH,OAAOW,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITf,GACFU,EAAYN,UAIZ,yBAAKY,UAAU,OACXjB,EAUA,oCACE,4BACGW,EAAYO,KAAI,SAAAC,GAAI,OACnB,4BACGA,OAKP,4BACEF,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKL,SAHhB,WAQA,4BACEY,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKH,YAHhB,QAQA,4BACEU,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKF,cAHhB,mBAQA,4BACES,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKD,OAHhB,UA1CF,4BACEW,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEN,YAAY,MAHhC,cAnDV,GAA+BsB,IAAMC,WCC/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOaC,EAJH,kBACV,kBAAC,EAAD,CAAWtB,MAAOqB,KCdpBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e0f37758.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ListGoods extends React.Component {\n  state = {\n    renderForm: false,\n    isReversed: false,\n    sortBy: '',\n    goods: this.props.goods,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState(({ sortBy: 'name' }));\n  };\n\n  sortByLength = () => {\n    this.setState(({ sortBy: 'length' }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false, sortBy: '',\n    });\n  };\n\n  render() {\n    const { goods, isReversed, sortBy, renderForm } = this.state;\n    const sortedGoods = [...goods];\n\n    sortedGoods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'name':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!renderForm ? (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ renderForm: true });\n            }}\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <ul>\n              {sortedGoods.map(good => (\n                <li>\n                  {good}\n                </li>\n              ))}\n            </ul>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              reverse\n            </button>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortByName}\n            >\n              sort\n            </button>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              sort for length\n            </button>\n\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              reset\n            </button>\n          </>\n        )\n      }\n      </div>\n    );\n  }\n}\n\nListGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { ListGoods } from './components/ListGoods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <ListGoods goods={goodsFromServer} />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}